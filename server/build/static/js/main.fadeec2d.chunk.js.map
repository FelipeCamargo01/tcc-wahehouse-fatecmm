{"version":3,"sources":["services/auth.service.js","pages/signIn.js","pages/signUp.js","pages/navbar.js","pages/product-card.js","services/auth-header.js","services/user.service.js","pages/supplier.js","pages/product.js","pages/stock-movimentation.js","pages/home.js","pages/products.js","pages/suppliers.js","App.js","reportWebVitals.js","index.js"],"names":["require","API_URL","process","email","password","console","log","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","remoteItem","firstName","lastName","parse","getItem","SignIn","useState","setEmail","setPassword","errorLogin","setErrorLogin","history","useHistory","React","useEffect","push","pathname","Container","maxWidth","align","style","paddingTop","Typography","marginBottom","component","variant","onSubmit","event","preventDefault","AuthService","login","catch","error","Grid","container","spacing","xs","alignItems","item","TextField","label","fullWidth","id","size","autoComplete","autoFocus","required","onChange","e","target","value","type","direction","justifyContent","Button","color","disableElevation","href","Box","mt","Alert","severity","renderErrorLogin","SignUp","props","setFirstName","setLastName","textAlign","register","message","toast","toString","useStyles","makeStyles","theme","profileName","cursor","drawer","width","drawerPaper","linkStyle","textDecoration","Navbar","classes","anchorEl","setAnchorEl","isProfileMenuOpen","Boolean","user","setUser","isLogged","setIsLogged","getUserFromStorage","onClickSignIn","onLogin","handleClick","currentTarget","logout","removeItem","onLogout","renderLogin","className","onClick","Menu","keepMounted","open","onClose","PaperProps","backgroundColor","MenuItem","Drawer","anchor","paper","List","ListItem","ListItemText","primary","Divider","button","Link","to","ListItemIcon","root","ProductCard","Card","CardActionArea","CardMedia","image","product","productImage","CardContent","gutterBottom","name","quantity","price","SKU","authHeader","body","headers","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","fab","position","bottom","right","Supplier","isConfirmationDeleteModalOpen","setIsConfirmationDeleteModalOpen","onDeleteSupplier","supplier","UserService","deleteSupplier","supplierId","success","onDelete","Accordion","AccordionSummary","expandIcon","AccordionDetails","disabled","phone","placeholder","multiline","rows","rowsMax","address","float","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Product","onDeleteProduct","deleteProduct","productId","keyboardType","inputMovimentation","border","outputMovimentation","StockMovimentation","stockMovimentation","description","height","textField","borderRadius","Home","isModalFormOpen","setIsModalFormOpen","screenLabel","setScreenLabel","productSuppliers","setProductSuppliers","productStockMovimentation","setProductStockMovimentation","supplierName","setSupplierName","supplierAddress","setSupplierAddress","supplierEmail","setSupplierEmail","supplierPhone","setSupplierPhone","suppliers","setSuppliers","productName","setProductName","productSKU","setProductSKU","productPrice","setProductPrice","productSupplierId","setProductSupplierId","setProductImage","productsItems","setProductItems","productInfos","setProductInfos","stockMovimentationProductId","setStockMovimentationProductId","stockMovimentationQuantity","setStockMovimentationQuantity","stockMovimentationType","setStockMovimentationType","stockMovimentationDescription","setStockMovimentationDescription","setStockMovimentation","getProductInfos","getSuppliers","getProducts","getProductSuppliers","getStockMovimentation","getProductsStockMovimentation","renderElement","mb","m","fontFamily","map","productInfo","productItem","stockMovimentationItem","createSupplier","createProduct","createStockMovimentation","createStockHistory","length","getStockHistory","onChangeScreen","screen","marginRight","Fab","InputLabel","Select","labelId","input","Input","productSupplier","constRenderFormModal","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","formContainer","paddingLeft","paddingRight","productRfId","setProductRfId","productBatchNumber","setProductBatchNumber","productDescription","setProductDescription","selectedProductSupplier","searchProductSuppliersOptions","setSearchProductSuppliersOptions","fetchData","rfId","batchNumber","productSuppliersOptions","display","flexDirection","Autocomplete","disablePortal","options","renderInput","params","option","getOptionLabel","InputProps","endAdornment","InputAdornment","Suppliers","supplierCNPJ","setSupplierCNPJ","supplierCorporateName","setSupplierCorporateName","supplierFantasyName","setSupplierFantasyName","supplierCEP","setSupplierCEP","supplierAddressNumber","setSupplierAddressNumber","suppliersData","setSuppliersData","field","title","suppliersColumns","cnpj","corporateName","fantasyName","cep","addressNumber","mask","sm","columns","editable","onRowDelete","selectedRow","Promise","resolve","reject","onRowUpdate","updatedRow","oldRow","updateSupplier","actionsColumnIndex","addRowPosition","renderSuppliersData","App","Paper","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fadeec2d.chunk.js","sourcesContent":["import axios from 'axios';\r\nrequire('dotenv');\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass AuthService {\r\n    login(email, password) {\r\n        console.log('API_URL');\r\n        console.log(API_URL);\r\n        return axios.post(API_URL + '/auth/signIn', {\r\n                email,\r\n                password\r\n            })\r\n            .then(response => {\r\n                if(response.data?.data?.accessToken) {\r\n                    localStorage.setItem('user', JSON.stringify(response.data.data))\r\n                }\r\n\r\n                return response.data;\r\n            })\r\n    }\r\n\r\n    logout() {\r\n        localStorage.remoteItem('user');\r\n    }\r\n\r\n    register(data) {\r\n        return axios.post(API_URL + '/auth/signUp', {\r\n            email: data.email,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            password: data.password\r\n        })\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function SignIn() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorLogin, setErrorLogin] = useState(false);\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem(\"user\") != null) {\r\n      history.push({\r\n        pathname: \"/\",\r\n      });\r\n    }\r\n  });\r\n\r\n  const onSubmit = (event) => {\r\n    console.log(\"onsubmit\");\r\n    event.preventDefault();\r\n    AuthService.login(email, password)\r\n      .then((data) => {\r\n        console.log(data);\r\n        history.push({\r\n          pathname: \"/\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setErrorLogin(true);\r\n        // removeErrorLogin();\r\n      });\r\n  };\r\n\r\n  const renderErrorLogin = () => {\r\n    if (errorLogin) {\r\n      return (\r\n        <span>\r\n          <Alert severity=\"error\">\r\n            Não foi possível fazer o seu login! Verifique seu usuário e senha e\r\n            tente novamente.\r\n          </Alert>\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <Container component=\"main\" maxWidth=\"xs\">\r\n    //   <CssBaseline />\r\n    //   <div className={classes.paper}>\r\n    //     <Avatar className={classes.avatar}>\r\n    //       <LockOutlinedIcon />\r\n    //     </Avatar>\r\n    //     <Typography component=\"h1\" variant=\"h5\">\r\n    //       Faça seu Login\r\n    //     </Typography>\r\n    //     <form className={classes.form} onSubmit={onSubmit}>\r\n    //       <TextField\r\n    //         variant=\"outlined\"\r\n    //         margin=\"normal\"\r\n    //         required\r\n    //         fullWidth\r\n    //         id=\"email\"\r\n    //         label=\"Email\"\r\n    //         name=\"email\"\r\n    //         autoComplete=\"email\"\r\n    //         autoFocus\r\n    //         onChange={(e) => setEmail(e.target.value)}\r\n    //       />\r\n    //       <TextField\r\n    //         variant=\"outlined\"\r\n    //         margin=\"normal\"\r\n    //         required\r\n    //         fullWidth\r\n    //         name=\"password\"\r\n    //         label=\"Senha\"\r\n    //         type=\"password\"\r\n    //         id=\"password\"\r\n    //         autoComplete=\"current-password\"\r\n    //         onChange={(e) => setPassword(e.target.value)}\r\n    //       />\r\n    //       <Button\r\n    //         type=\"submit\"\r\n    //         fullWidth\r\n    //         variant=\"contained\"\r\n    //         color=\"primary\"\r\n    //         className={classes.submit}\r\n    //       >\r\n    //         Login\r\n    //       </Button>\r\n    //       <Grid justifyContent=\"center\" container>\r\n    //         <Grid item>\r\n    //           <Link href=\"/signup\" variant=\"body2\">\r\n    //             {\"Não tem uma conta? Cadastre-se\"}\r\n    //           </Link>\r\n    //         </Grid>\r\n    //       </Grid>\r\n    //     </form>\r\n    //     <Box mt={4}>{renderErrorLogin()}</Box>\r\n    //   </div>\r\n    // </Container>\r\n    <Container maxWidth=\"sm\" align=\"center\" style={{ paddingTop: \"5rem\" }}>\r\n      <Typography\r\n        marginBottom={\"3rem\"}\r\n        align=\"center\"\r\n        component=\"h1\"\r\n        variant=\"h5\"\r\n        style={{ marginBottom: \"2rem\" }}>\r\n        Faça seu Login\r\n      </Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          xs={12}\r\n          alignItems=\"center\"\r\n          style={{ marginBottom: \"2rem\" }}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"E-mail\"\r\n              fullWidth\r\n              id=\"email\"\r\n              size=\"small\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}></TextField>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Senha\"\r\n              type=\"password\"\r\n              fullWidth\r\n              id=\"password\"\r\n              size=\"small\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}></TextField>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} direction=\"row\" justifyContent=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disableElevation>\r\n              login\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              href=\"/signup\"\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              disableElevation>\r\n              cadastrar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n\r\n      <Box mt={4}>{renderErrorLogin()}</Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function SignUp(props) {\r\n  const history = useHistory();\r\n  const [firstName, setFirstName] = useState();\r\n  const [lastName, setLastName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem(\"user\") != null) {\r\n      history.push({\r\n        pathname: \"/\",\r\n      });\r\n    }\r\n  });\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    AuthService.register({\r\n      password: password,\r\n      lastName: lastName,\r\n      firstName: firstName,\r\n      email: email,\r\n    })\r\n      .then((response) => {\r\n        if (response.data) {\r\n          if (response.data.message === \"Error\") {\r\n            toast.error(response.data.data);\r\n          } else {\r\n            console.log(response.data);\r\n            if (response.data.data?.accessToken) {\r\n              localStorage.setItem(\"user\", JSON.stringify(response.data.data));\r\n            }\r\n            history.push({\r\n              pathname: \"/\",\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(response.toString());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.toString());\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" align=\"center\" style={{ paddingTop: \"5rem\" }}>\r\n      <Typography\r\n        textAlign=\"center\"\r\n        component=\"h1\"\r\n        variant=\"h5\"\r\n        style={{ marginBottom: \"2rem\" }}>\r\n        Cadastre-se\r\n      </Typography>\r\n      <form onSubmit={onSubmit}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          xs={12}\r\n          alignItems=\"center\"\r\n          style={{ marginBottom: \"2rem\" }}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Nome\"\r\n              fullWidth\r\n              size=\"small\"\r\n              autoFocus\r\n              required\r\n              onChange={(e) => setFirstName(e.target.value)}></TextField>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Sobrenome\"\r\n              fullWidth\r\n              size=\"small\"\r\n              required\r\n              onChange={(e) => setLastName(e.target.value)}></TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"E-mail\"\r\n              fullWidth\r\n              size=\"small\"\r\n              autoComplete=\"email\"\r\n              required\r\n              onChange={(e) => setEmail(e.target.value)}></TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Senha\"\r\n              fullWidth\r\n              size=\"small\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}></TextField>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={2} direction=\"row\" justifyContent=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disableElevation>\r\n              Cadastrar\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              href=\"/signin\"\r\n              variant=\"contained\"\r\n              color=\"inherit\"\r\n              disableElevation>\r\n              Cancelar\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { useHistory } from \"react-router\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  ListItemIcon,\r\n} from \"@material-ui/core\";\r\n\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleAlt from \"@material-ui/icons/PeopleAlt\";\r\nimport ListAlt from \"@material-ui/icons/ListAlt\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nrequire(\"./css/navbar.css\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profileName: {\r\n    cursor: \"pointer\",\r\n  },\r\n  drawer: {\r\n    width: 240,\r\n  },\r\n  drawerPaper: {\r\n    width: 240,\r\n  },\r\n  linkStyle: {\r\n    textDecoration: \"none\",\r\n    color: \"#E9E9EB\",\r\n  },\r\n}));\r\n\r\nexport default function Navbar(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const isProfileMenuOpen = Boolean(anchorEl);\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [isLogged, setIsLogged] = useState(null);\r\n\r\n  const getUserFromStorage = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      setUser(user);\r\n      setIsLogged(true);\r\n    } else {\r\n      setUser(null);\r\n      setIsLogged(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserFromStorage();\r\n  }, [isLogged]);\r\n\r\n  const onClickSignIn = () => {\r\n    props.onLogin();\r\n    history.push(\"/signin\");\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    props.onLogout();\r\n  };\r\n\r\n  const renderLogin = () => {\r\n    if (user != null) {\r\n      return (\r\n        <Box>\r\n          <Box>\r\n            <Typography\r\n              variant=\"h6\"\r\n              className={classes.profileName}\r\n              component=\"h6\"\r\n              onClick={handleClick}>\r\n              {user?.firstName} {user?.lastName}\r\n            </Typography>\r\n          </Box>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={isProfileMenuOpen}\r\n            onClose={() => {\r\n              handleClose();\r\n            }}\r\n            PaperProps={{\r\n              style: {\r\n                width: \"20ch\",\r\n                backgroundColor: \"orange\",\r\n                color: \"#E9E9EB\",\r\n              },\r\n            }}>\r\n            <MenuItem onClick={logout}>Logout</MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          disableElevation\r\n          onClick={onClickSignIn}>\r\n          <a className={classes.linkStyle} href=\"/signIn\">\r\n            Login\r\n          </a>\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderDrawer = () => {\r\n    if (isLogged) {\r\n      return (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.drawerPaper }}>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary={renderLogin()} />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem button component={Link} to={\"/\"}>\r\n              <ListItemIcon>\r\n                <DashboardIcon color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n            <ListItem button component={Link} to={\"/products\"}>\r\n              <ListItemIcon>\r\n                <ListAlt color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Produtos\" />\r\n            </ListItem>\r\n            <ListItem button component={Link} to={\"/suppliers\"}>\r\n              <ListItemIcon>\r\n                <PeopleAlt color=\"primary\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Fornecedores\" />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n      );\r\n    } else {\r\n      return (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.drawerPaper }}>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText primary={renderLogin()} />\r\n            </ListItem>\r\n            <Divider />\r\n          </List>\r\n        </Drawer>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <>{renderDrawer()}</>;\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\n\r\nexport default function ProductCard(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          image={props.product?.productImage != null ? props.product?.productImage: 'https://www.flipstyle.store/assets/product-image-default-c27c976d2bb6d3eabd88fd9e10f0d4d6e7361026469ee151c0b6f0ad73e212b6.jpg'}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.product?.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Quantidade: {props.product?.quantity}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Preço: R$ {props.product?.price}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Código SKU: {props.product?.SKU}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if(user && user.accessToken) {\r\n        return { \r\n        // Authorization: 'Bearer ' + user.accessToken,\r\n        'x-access-token': user.accessToken \r\n    }\r\n    } else {\r\n        return {};\r\n    }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nrequire('dotenv');\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nclass UserService {\r\n    createSupplier(body) {\r\n        return axios.post(API_URL + '/create-supplier', body, { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    getSuppliers() {\r\n        return axios.post(API_URL + '/get-suppliers', { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    deleteSupplier(body) {\r\n        return axios.post(API_URL + '/delete-supplier', body, { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    updateSupplier(body) {\r\n        return axios.post(API_URL + '/update-supplier', body, { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    createProduct(body) {\r\n        return axios.post(API_URL + '/create-product', body, { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    getProducts() {\r\n        return axios.post(API_URL + '/get-products', { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    getProductInfos() {\r\n        return axios.post(API_URL + '/get-product-infos', { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    deleteProduct(body) {\r\n        return axios.post(API_URL + '/delete-product', body, { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    createStockHistory(body) {\r\n        return axios.post(API_URL + '/create-stock-history', body, { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n    getStockHistory() {\r\n        return axios.post(API_URL + '/get-stock-history', { headers: authHeader() }).then(response => { return response.data })\r\n    }\r\n}\r\n\r\nexport default new UserService();","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport UserService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Supplier(props) {\r\n  const classes = useStyles();\r\n  const [isConfirmationDeleteModalOpen, setIsConfirmationDeleteModalOpen] =\r\n    useState(false);\r\n\r\n  const onDeleteSupplier = () => {\r\n    console.log(props.supplier);\r\n    UserService.deleteSupplier({supplierId: props.supplier.id}).then(response => {\r\n      toast.success(response.data);\r\n      props.onDelete();\r\n      setIsConfirmationDeleteModalOpen(false);\r\n    }).catch(error => {\r\n      toast.error(error.data?.data);\r\n    })\r\n  };\r\n\r\n  const confirmationDeleteModal = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={isConfirmationDeleteModalOpen}\r\n          onClose={() => {\r\n            setIsConfirmationDeleteModalOpen(false);\r\n          }}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Apagar fornecedor?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Deseja apagar este fornecedor ?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setIsConfirmationDeleteModalOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Cancelar\r\n            </Button>\r\n            <Button onClick={onDeleteSupplier} color=\"primary\" autoFocus>\r\n              Deletar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.heading}>\r\n            {props.supplier?.name}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"sname\"\r\n                name=\"supplierName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"supplierName\"\r\n                label=\"Nome do fornecedor\"\r\n                autoFocus\r\n                value={props.supplier?.name}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"supplierEmail\"\r\n                label=\"Email do fornecedor\"\r\n                name=\"supplierEmail\"\r\n                autoComplete=\"email\"\r\n                value={props.supplier?.email}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"supplierPhone\"\r\n                label=\"Telefone do fornecedor\"\r\n                id=\"supplierPhone\"\r\n                value={props.supplier?.phone}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                placeholder=\"\"\r\n                multiline\r\n                rows={2}\r\n                rowsMax={4}\r\n                label=\"Endereço do fornecedor\"\r\n                value={props.supplier?.address}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ float: \"right\" }}>\r\n                <DeleteIcon onClick={() => { setIsConfirmationDeleteModalOpen(true) }} style={{ color: \"red\", cursor: \"pointer\" }} />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      {confirmationDeleteModal()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport UserService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nrequire('./css/products.css');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default function Product(props) {\r\n  // product form\r\n  const [productName, setProductName] = useState(null);\r\n  const [productSKU, setProductSKU] = useState(null);\r\n  const [productPrice, setProductPrice] = useState(null);\r\n  const [productSupplierId, setProductSupplierId] = useState(null);\r\n  const [productImage, setProductImage] = useState(null);\r\n  const [productsItems, setProductItems] = useState([]);\r\n  const [productInfos, setProductInfos] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  const [isConfirmationDeleteModalOpen, setIsConfirmationDeleteModalOpen] =\r\n    useState(false);\r\n\r\n  const [productSuppliers, setProductSuppliers] = useState([]);\r\n\r\n  const getProducts = () => {\r\n    setProductItems([]);\r\n    UserService.getProducts().then((response) => {\r\n      setProductItems(response.data);\r\n    });\r\n  };\r\n\r\n  const onDeleteProduct = () => {\r\n    console.log(props.supplier);\r\n    UserService.deleteProduct({ productId: props.product.id })\r\n      .then((response) => {\r\n        toast.success(response.data);\r\n        props.onDelete();\r\n        setIsConfirmationDeleteModalOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.data?.data);\r\n      });\r\n  };\r\n\r\n  const createProduct = (event) => {\r\n    event.preventDefault();\r\n    UserService.createProduct({\r\n      name: productName,\r\n      SKU: productSKU,\r\n      price: productPrice,\r\n      supplierId: productSupplierId,\r\n      productImage: productImage\r\n    })\r\n      .then((response) => {\r\n        toast.success(response.data);\r\n        // setIsModalFormOpen(false);\r\n        getProducts();\r\n      })\r\n      .catch((error) => {\r\n        if (error.data) {\r\n          if (error.data.data) {\r\n            toast.error(error.data.data.message);\r\n          }\r\n        } else {\r\n          toast.error(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const confirmationDeleteModal = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={isConfirmationDeleteModalOpen}\r\n          onClose={() => {\r\n            setIsConfirmationDeleteModalOpen(false);\r\n          }}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Apagar produto?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Deseja apagar este produto ?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                setIsConfirmationDeleteModalOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Cancelar\r\n            </Button>\r\n            <Button onClick={onDeleteProduct} color=\"primary\" autoFocus>\r\n              Deletar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const productForm = () => {\r\n    <form onSubmit={createProduct}>\r\n      <Grid id='item-form' container spacing={2}>\r\n        <Grid item xs={12}>\r\n\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <input\r\n            autoComplete=\"sname\"\r\n            name=\"supplierName\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"productName\"\r\n            label=\"Nome do produto\"\r\n            autoFocus\r\n            placeholder=\"Nome do produto\"\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            className={classes.textField}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"productSKU\"\r\n            label=\"SKU do produto\"\r\n            name=\"productSKU\"\r\n            onChange={(e) => setProductSKU(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            id=\"productImageLink\"\r\n            label=\"Link da imagem do produto\"\r\n            name=\"productImageLink\"\r\n            onChange={(e) => setProductImage(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            keyboardType=\"numeric\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            name=\"productPrice\"\r\n            label=\"Preço do produto\"\r\n            id=\"productPrice\"\r\n            onChange={(e) => setProductPrice(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <InputLabel>Fornecedor</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-name-label\"\r\n            id=\"demo-mutiple-name\"\r\n            value={productSupplierId}\r\n            required\r\n            onChange={(event) => {\r\n              setProductSupplierId(event.target.value);\r\n            }}\r\n            style={{ width: \"100%\" }}\r\n            input={<Input />}\r\n          >\r\n            {productSuppliers.map((productSupplier) => (\r\n              <MenuItem\r\n                key={productSupplier.id}\r\n                value={productSupplier.id}\r\n              >\r\n                {productSupplier.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n      <Box mt={3} style={{ float: \"right\" }}>\r\n        <Button\r\n          onClick={() => {\r\n            // setIsModalFormOpen(false);\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          Cancelar\r\n        </Button>\r\n        <Button color=\"primary\" type=\"submit\">\r\n          Confirmar\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading}>\r\n            {props.product?.name}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"sname\"\r\n                name=\"productName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"productName\"\r\n                label=\"Nome do produto\"\r\n                autoFocus\r\n                value={props.product?.name}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"sname\"\r\n                name=\"supplierProduct\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"supplierProduct\"\r\n                label=\"Fornecedor\"\r\n                autoFocus\r\n                value={props.product['supplier.name']}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"supplierEmail\"\r\n                label=\"SKU do produto\"\r\n                name=\"supplierEmail\"\r\n                value={props.product?.SKU}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"supplierPhone\"\r\n                label=\"Link da imagem do produto\"\r\n                id=\"supplierPhone\"\r\n                value={props.product?.productImage}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                keyboardType=\"numeric\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"productPrice\"\r\n                label=\"Preço do produto\"\r\n                id=\"productPrice\"\r\n                value={props.product?.price}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ float: \"right\" }}>\r\n                <DeleteIcon\r\n                  onClick={() => {\r\n                    setIsConfirmationDeleteModalOpen(true);\r\n                  }}\r\n                  style={{ color: \"red\", cursor: \"pointer\" }}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      {confirmationDeleteModal()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  inputMovimentation: {\r\n      border: '1px solid green'\r\n  },\r\n  outputMovimentation: {\r\n      border: '1px solid red'\r\n  }\r\n}));\r\n\r\nexport default function StockMovimentation(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion className={ props.stockMovimentation?.type === 'Entrada' ? classes.inputMovimentation: classes.outputMovimentation }>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.heading}>\r\n            {props.stockMovimentation['product.name']}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"sname\"\r\n                name=\"productName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"productName\"\r\n                label=\"Quantidade\"\r\n                autoFocus\r\n                value={props.stockMovimentation?.quantity}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"stockType\"\r\n                id=\"stockType\"\r\n                label=\"Tipo de movimentação\"\r\n                value={props.stockMovimentation?.type}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"supplierPhone\"\r\n                label=\"Produto\"\r\n                value={props.stockMovimentation['product.name']}\r\n                disabled={true}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                  <TextField\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"\"\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    label=\"Descrição\"\r\n                    value={props.stockMovimentation?.description}\r\n                    disabled={true}\r\n                  />\r\n                </Grid>\r\n          </Grid>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Navbar from \"./navbar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport ProductCard from \"./product-card\";\r\nimport Supplier from \"./supplier\";\r\nimport Product from \"./product\";\r\nimport StockMovimentation from \"./stock-movimentation\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nrequire('./css/home.css');\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  textField: {\r\n    border: '2px solid #0084A8 !important',\r\n    borderRadius: '5px',\r\n  },\r\n});\r\n\r\nexport default function Home() {\r\n  const getUserFromStorage = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      setUser(user);\r\n      setIsLogged(true);\r\n    } else {\r\n      setUser(null);\r\n      setIsLogged(false);\r\n    }\r\n  };\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [isLogged, setIsLogged] = useState(null);\r\n  const [products, setProducts] = useState({\r\n    image:\r\n      \"https://imagensemoldes.com.br/wp-content/uploads/2020/05/Laranja-PNG.png\",\r\n    quantity: 2,\r\n    price: \"R$1,00\",\r\n    SKU: \"123\",\r\n    name: \"Laranja\",\r\n  });\r\n  const [isModalFormOpen, setIsModalFormOpen] = useState(false);\r\n  const [screenLabel, setScreenLabel] = useState(\"Home\");\r\n  const [productSuppliers, setProductSuppliers] = useState([]);\r\n  const [productStockMovimentation, setProductStockMovimentation] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  // supplier form\r\n  const [supplierName, setSupplierName] = useState(null);\r\n  const [supplierAddress, setSupplierAddress] = useState(null);\r\n  const [supplierEmail, setSupplierEmail] = useState(null);\r\n  const [supplierPhone, setSupplierPhone] = useState(null);\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  // product form\r\n  const [productName, setProductName] = useState(null);\r\n  const [productSKU, setProductSKU] = useState(null);\r\n  const [productPrice, setProductPrice] = useState(null);\r\n  const [productSupplierId, setProductSupplierId] = useState(null);\r\n  const [productImage, setProductImage] = useState(null);\r\n  const [productsItems, setProductItems] = useState([]);\r\n  const [productInfos, setProductInfos] = useState([]);\r\n  // movimentations form\r\n  const [stockMovimentationProductId, setStockMovimentationProductId] = useState(null);\r\n  const [stockMovimentationQuantity, setStockMovimentationQuantity] = useState(null);\r\n  const [stockMovimentationType, setStockMovimentationType] = useState(null);\r\n  const [stockMovimentationDescription, setStockMovimentationDescription] = useState(null);\r\n  const [stockMovimentation, setStockMovimentation] = useState([]);\r\n  useEffect(() => {\r\n    getUserFromStorage();\r\n    if(isLogged && screenLabel === 'Home') {\r\n      getProductInfos();\r\n    }\r\n    if (isLogged && screenLabel === \"Fornecedores\") {\r\n      getSuppliers();\r\n    }\r\n    if (isLogged && screenLabel === \"Produtos\") {\r\n      getProducts();\r\n      getProductSuppliers();\r\n    }\r\n    if (isLogged && screenLabel === \"Movimentação\") {\r\n      getStockMovimentation();\r\n      getProductsStockMovimentation();\r\n    }\r\n    // });\r\n  }, [isLogged, screenLabel]);\r\n\r\n  const renderElement = () => {\r\n    switch (screenLabel) {\r\n      case \"Home\":\r\n        return (\r\n          <Grid container spacing={3}>\r\n            <Grid mb={4} container spacing={3}>\r\n              <Box mt={4} mb={4} m=\"auto\">\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{\r\n                    fontFamily: \"Verdana\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"#19262E\",\r\n                  }}\r\n                  component=\"h3\"\r\n                >\r\n                  Estoque de produtos\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            {productInfos.map((productInfo) => (\r\n              <Grid mt={4} item xs={4}>\r\n                <ProductCard\r\n                  product={productInfo}\r\n                ></ProductCard>\r\n              </Grid>\r\n            ))}\r\n            \r\n            {/* <Grid mt={4} item xs={4}>\r\n              <Box mt={4}>\r\n                <ProductCard product={products} />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Box mt={4}>\r\n                <ProductCard product={products} />\r\n              </Box>\r\n            </Grid>\r\n            <Grid mt={4} item xs={4}>\r\n              <Box mt={4}>\r\n                <ProductCard product={products} />\r\n              </Box>\r\n            </Grid>\r\n            <Grid mt={4} item xs={4}>\r\n              <Box mt={4}>\r\n                <ProductCard product={products} />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Box mt={4}>\r\n                <ProductCard product={products} />\r\n              </Box>\r\n            </Grid> */}\r\n          </Grid>\r\n        );\r\n      case \"Produtos\":\r\n        return (\r\n          <Grid container spacing={3}>\r\n            <Grid container spacing={3}>\r\n              <Box mt={4} mb={4} m=\"auto\">\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{\r\n                    fontFamily: \"Verdana\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"#19262E\",\r\n                  }}\r\n                  component=\"h3\"\r\n                >\r\n                  Cadastro de produtos\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            {productsItems.map((productItem) => (\r\n              <Grid item xs={12}>\r\n                <Product\r\n                  onDelete={() => {\r\n                    getProducts();\r\n                  }}\r\n                  product={productItem}\r\n                ></Product>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        );\r\n      case \"Fornecedores\":\r\n        return (\r\n          <Grid container spacing={3}>\r\n            <Grid container spacing={3}>\r\n              <Box mt={4} mb={4} m=\"auto\">\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{\r\n                    fontFamily: \"Verdana\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"#19262E\",\r\n                  }}\r\n                  component=\"h3\"\r\n                >\r\n                  Cadastro de fornecedores\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            {suppliers.map((supplier) => (\r\n              <Grid item xs={12}>\r\n                <Supplier\r\n                  onDelete={() => {\r\n                    getSuppliers();\r\n                  }}\r\n                  supplier={supplier}\r\n                ></Supplier>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        );\r\n      case \"Movimentação\":\r\n        return (\r\n          <Grid container spacing={3}>\r\n            <Grid container spacing={3}>\r\n              <Box mt={4} mb={4} m=\"auto\">\r\n                <Typography\r\n                  variant=\"h3\"\r\n                  style={{\r\n                    fontFamily: \"Verdana\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"#19262E\",\r\n                  }}\r\n                  component=\"h3\"\r\n                >\r\n                  Cadastro de movimentação\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            {stockMovimentation.map((stockMovimentationItem) => (\r\n              <Grid item xs={12}>\r\n                <StockMovimentation\r\n                  stockMovimentation={stockMovimentationItem}\r\n                ></StockMovimentation>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (isLogged) {\r\n      return <Box>{renderElement()}</Box>;\r\n    } else {\r\n      return (\r\n        <Grid container spacing={3}>\r\n          <Box mt={4} m=\"auto\">\r\n            Você não está logado! Autentifique-se\r\n          </Box>\r\n        </Grid>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderSupplierForm = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={isModalFormOpen}\r\n          onClose={() => {\r\n            setIsModalFormOpen(false);\r\n          }}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Cadastro de fornecedor\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={createSupplier}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"sname\"\r\n                    name=\"supplierName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"supplierName\"\r\n                    label=\"Nome do fornecedor\"\r\n                    autoFocus\r\n                    onChange={(e) => setSupplierName(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"supplierEmail\"\r\n                    label=\"Email do fornecedor\"\r\n                    name=\"supplierEmail\"\r\n                    autoComplete=\"email\"\r\n                    onChange={(e) => setSupplierEmail(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"supplierPhone\"\r\n                    label=\"Telefone do fornecedor\"\r\n                    id=\"supplierPhone\"\r\n                    onChange={(e) => setSupplierPhone(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"\"\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    label=\"Endereço do fornecedor\"\r\n                    onChange={(e) => setSupplierAddress(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={3} style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => {\r\n                    setIsModalFormOpen(false);\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" type=\"submit\">\r\n                  Confirmar\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderProductForm = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={isModalFormOpen}\r\n          onClose={() => {\r\n            setIsModalFormOpen(false);\r\n          }}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Cadastro de produto</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={createProduct}>\r\n              <Grid id='item-form' container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <input\r\n                    autoComplete=\"sname\"\r\n                    name=\"supplierName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"productName\"\r\n                    label=\"Nome do produto\"\r\n                    autoFocus\r\n                    placeholder=\"Nome do produto\"\r\n                    onChange={(e) => setProductName(e.target.value)}\r\n                    className={classes.textField}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"productSKU\"\r\n                    label=\"SKU do produto\"\r\n                    name=\"productSKU\"\r\n                    onChange={(e) => setProductSKU(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"productImageLink\"\r\n                    label=\"Link da imagem do produto\"\r\n                    name=\"productImageLink\"\r\n                    onChange={(e) => setProductImage(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    keyboardType=\"numeric\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"productPrice\"\r\n                    label=\"Preço do produto\"\r\n                    id=\"productPrice\"\r\n                    onChange={(e) => setProductPrice(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <InputLabel>Fornecedor</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-mutiple-name-label\"\r\n                    id=\"demo-mutiple-name\"\r\n                    value={productSupplierId}\r\n                    required\r\n                    onChange={(event) => {\r\n                      setProductSupplierId(event.target.value);\r\n                    }}\r\n                    style={{ width: \"100%\" }}\r\n                    input={<Input />}\r\n                  >\r\n                    {productSuppliers.map((productSupplier) => (\r\n                      <MenuItem\r\n                        key={productSupplier.id}\r\n                        value={productSupplier.id}\r\n                      >\r\n                        {productSupplier.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={3} style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => {\r\n                    setIsModalFormOpen(false);\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" type=\"submit\">\r\n                  Confirmar\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderStockMovimentationForm = () => {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={isModalFormOpen}\r\n          onClose={() => {\r\n            setIsModalFormOpen(false);\r\n          }}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Cadastro de movimentações</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={createStockMovimentation}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"sname\"\r\n                    name=\"supplierName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"stockQuantity\"\r\n                    label=\"Quantidade\"\r\n                    autoFocus\r\n                    type=\"number\"\r\n                    onChange={(e) => setStockMovimentationQuantity(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <InputLabel>Tipo</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-mutiple-name-label\"\r\n                    id=\"demo-mutiple-name\"\r\n                    value={stockMovimentationType}\r\n                    required\r\n                    onChange={(event) => {\r\n                      setStockMovimentationType(event.target.value);\r\n                    }}\r\n                    style={{ width: \"100%\" }}\r\n                    input={<Input />}\r\n                  >\r\n                      <MenuItem\r\n                        value=\"Entrada\"\r\n                      >\r\n                        Entrada\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        value=\"Saída\"\r\n                      >\r\n                        Saída\r\n                      </MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <InputLabel>Produto</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-mutiple-name-label\"\r\n                    id=\"demo-mutiple-name\"\r\n                    value={stockMovimentationProductId}\r\n                    required\r\n                    onChange={(event) => {\r\n                      setStockMovimentationProductId(event.target.value);\r\n                    }}\r\n                    style={{ width: \"100%\" }}\r\n                    input={<Input />}\r\n                  >\r\n                    {productStockMovimentation.map((product) => (\r\n                      <MenuItem\r\n                        key={product.id}\r\n                        value={product.id}\r\n                      >\r\n                        {product.name}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"\"\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    label=\"Descrição\"\r\n                    onChange={(e) => setStockMovimentationDescription(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={3} style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={() => {\r\n                    setIsModalFormOpen(false);\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" type=\"submit\">\r\n                  Confirmar\r\n                </Button>\r\n              </Box>\r\n            </form>\r\n          </DialogContent>\r\n          {/* <DialogActions>\r\n            </DialogActions> */}\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const constRenderFormModal = () => {\r\n    switch (screenLabel) {\r\n      case \"Home\":\r\n        return;\r\n      case \"Produtos\":\r\n        return renderProductForm();\r\n      case \"Fornecedores\":\r\n        return renderSupplierForm();\r\n      case \"Movimentação\":\r\n        return renderStockMovimentationForm();\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const renderAddElement = () => {\r\n    if (screenLabel === \"Home\") {\r\n      return;\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            right: \"0\",\r\n            bottom: \"0\",\r\n            marginRight: \"50px\",\r\n            marginBottom: \"50px\",\r\n          }}\r\n        >\r\n          <Fab\r\n            color=\"primary\"\r\n            onClick={() => setIsModalFormOpen(true)}\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const createSupplier = (event) => {\r\n    event.preventDefault();\r\n    UserService.createSupplier({\r\n      email: supplierEmail,\r\n      address: supplierAddress,\r\n      name: supplierName,\r\n      phone: supplierPhone,\r\n    })\r\n      .then((response) => {\r\n        toast.success(response.data);\r\n        setIsModalFormOpen(false);\r\n        getSuppliers();\r\n      })\r\n      .catch((error) => {\r\n        if (error.data) {\r\n          if (error.data.data) {\r\n            toast.error(error.data.data.message);\r\n          }\r\n        } else {\r\n          toast.error(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const createProduct = (event) => {\r\n    event.preventDefault();\r\n    UserService.createProduct({\r\n      name: productName,\r\n      SKU: productSKU,\r\n      price: productPrice,\r\n      supplierId: productSupplierId,\r\n      productImage: productImage\r\n    })\r\n      .then((response) => {\r\n        toast.success(response.data);\r\n        setIsModalFormOpen(false);\r\n        getProducts();\r\n      })\r\n      .catch((error) => {\r\n        if (error.data) {\r\n          if (error.data.data) {\r\n            toast.error(error.data.data.message);\r\n          }\r\n        } else {\r\n          toast.error(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const createStockMovimentation = (event) => {\r\n    event.preventDefault();\r\n    UserService.createStockHistory({\r\n      productId: stockMovimentationProductId,\r\n      description: stockMovimentationDescription,\r\n      type: stockMovimentationType,\r\n      quantity: stockMovimentationQuantity,\r\n    })\r\n      .then((response) => {\r\n        toast.success(response.data);\r\n        setIsModalFormOpen(false);\r\n        getStockMovimentation();\r\n      })\r\n      .catch((error) => {\r\n        if (error.data) {\r\n          if (error.data.data) {\r\n            toast.error(error.data.data.message);\r\n          }\r\n        } else {\r\n          toast.error(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getSuppliers = () => {\r\n    setSuppliers([]);\r\n    UserService.getSuppliers().then((response) => {\r\n      setSuppliers(response.data);\r\n    });\r\n  };\r\n\r\n  const getProducts = () => {\r\n    setProductItems([]);\r\n    UserService.getProducts().then((response) => {\r\n      setProductItems(response.data);\r\n    });\r\n  };\r\n\r\n  const getProductInfos = () => {\r\n    setProductInfos([]);\r\n    UserService.getProductInfos().then((response) => {\r\n      if(response.data == null) {\r\n        setProductInfos([]);\r\n      }\r\n      else if(response.data.length <= 0) {\r\n        setProductInfos([]);\r\n      }\r\n      else {\r\n        setProductInfos(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getStockMovimentation = () => {\r\n    setStockMovimentation([]);\r\n    UserService.getStockHistory().then((response) => {\r\n      console.log(response.data);\r\n      setStockMovimentation(response.data);\r\n    });\r\n  };\r\n\r\n  const getProductsStockMovimentation = () => {\r\n    setProductStockMovimentation([]);\r\n    UserService.getProducts().then((response) => {\r\n      setProductStockMovimentation(response.data);\r\n    });\r\n  };\r\n\r\n  const getProductSuppliers = () => {\r\n    setSuppliers([]);\r\n    UserService.getSuppliers().then((response) => {\r\n      setProductSuppliers(response.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Navbar\r\n        isLogged={isLogged}\r\n        user={user}\r\n        onLogin={() => {\r\n          setIsLogged(true);\r\n          getUserFromStorage();\r\n        }}\r\n        onLogout={() => {\r\n          setIsLogged(false);\r\n        }}\r\n        onChangeScreen={(screen) => {\r\n          setScreenLabel(screen);\r\n        }}\r\n      />\r\n      <Container maxWidth=\"lg\">{renderContent()}</Container>\r\n      {renderAddElement()}\r\n      {constRenderFormModal()}\r\n      <ToastContainer\r\n        position=\"bottom-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Navbar from \"./navbar\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport CurrencyInput from \"react-currency-input-field\";\r\nimport SelectSearch, { useSelect } from \"react-select-search\";\r\nimport \"react-select-search/style.css\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nimport InputMask, { ReactInputMask } from \"react-input-mask\";\r\n\r\n//css imports\r\nrequire(\"./css/forms.css\");\r\nrequire(\"./css/products.css\");\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  formContainer: {\r\n    paddingLeft: \"10vw\",\r\n    paddingRight: \"10vw\",\r\n    paddingTop: \"2vh\",\r\n  },\r\n});\r\n\r\nexport default function Product(props) {\r\n  // product form\r\n  const [productName, setProductName] = useState(null);\r\n  const [productSKU, setProductSKU] = useState(null);\r\n  const [productPrice, setProductPrice] = useState(null);\r\n  const [productSupplierId, setProductSupplierId] = useState(null);\r\n  const [productImage, setProductImage] = useState(null);\r\n  const [productRfId, setProductRfId] = useState(null);\r\n  const [productBatchNumber, setProductBatchNumber] = useState(null);\r\n  const [productDescription, setProductDescription] = useState(null);\r\n  const [selectedProductSupplier, setSelectedProductSupplier] = useState(null);\r\n  const [productsItems, setProductItems] = useState([]);\r\n  const [productInfos, setProductInfos] = useState([]);\r\n  const [productSuppliers, setProductSuppliers] = useState([]);\r\n\r\n  const [searchProductSuppliersOptions, setSearchProductSuppliersOptions] =\r\n    useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState(null);\r\n  const [isLogged, setIsLogged] = useState(null);\r\n\r\n  const getUserFromStorage = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      setUser(user);\r\n      setIsLogged(true);\r\n    } else {\r\n      setUser(null);\r\n      setIsLogged(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserFromStorage();\r\n  }, [isLogged]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await getProductSuppliers();\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const createProduct = (event) => {\r\n    event.preventDefault();\r\n    UserService.createProduct({\r\n      name: productName,\r\n      SKU: productSKU,\r\n      price: productPrice,\r\n      supplierId: productSupplierId,\r\n      description: productDescription,\r\n      rfId: productRfId,\r\n      batchNumber: productBatchNumber,\r\n    })\r\n      .then((response) => {\r\n        toast.success(response.data);\r\n        //   setIsModalFormOpen(false);\r\n        getProducts();\r\n      })\r\n      .catch((error) => {\r\n        if (error.data) {\r\n          if (error.data.data) {\r\n            toast.error(error.data.data.message);\r\n          }\r\n        } else {\r\n          toast.error(error);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getProducts = () => {\r\n    setProductItems([]);\r\n    UserService.getProducts().then((response) => {\r\n      setProductItems(response.data);\r\n    });\r\n  };\r\n\r\n  const getProductSuppliers = () => {\r\n    UserService.getSuppliers().then((response) => {\r\n      console.log(response.data);\r\n      setProductSuppliers(response.data);\r\n      let productSuppliersOptions = [];\r\n      for (const supplier of response.data) {\r\n        productSuppliersOptions.push({\r\n          name: supplier.name,\r\n          value: supplier.id,\r\n        });\r\n      }\r\n\r\n      setSearchProductSuppliersOptions(productSuppliersOptions);\r\n      console.log(searchProductSuppliersOptions);\r\n    });\r\n  };\r\n\r\n  const renderProductForm = () => {\r\n    if (isLogged) {\r\n      return (\r\n        <Container maxWidth=\"md\" align=\"center\" style={{ paddingTop: \"5rem\" }}>\r\n          <Typography\r\n            marginBottom={\"3rem\"}\r\n            align=\"center\"\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n            style={{ marginBottom: \"2rem\" }}>\r\n            Cadastrar Produto\r\n          </Typography>\r\n          <form onSubmit={createProduct}>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              xs={12}\r\n              marginBottom={\"2rem\"}\r\n              alignItems=\"center\"\r\n              style={{ marginBottom: \"2rem\" }}>\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"RFID\"\r\n                  value={productRfId}\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) => setProductRfId(e.target.value)}></TextField>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Lote\"\r\n                  value={productBatchNumber}\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setProductBatchNumber(e.target.value)\r\n                  }></TextField>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Nome\"\r\n                  value={productName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) => setProductName(e.target.value)}></TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <Autocomplete\r\n                  disablePortal\r\n                  options={searchProductSuppliersOptions}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Fornecedores\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      value={selectedProductSupplier}\r\n                    />\r\n                  )}\r\n                  onChange={(event, option) =>\r\n                    setProductSupplierId(option.value)\r\n                  }\r\n                  getOptionLabel={(option) => option.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"SKU\"\r\n                  value={productSKU}\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) => setProductSKU(e.target.value)}></TextField>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Preço\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  value={productPrice}\r\n                  onChange={(e) => setProductPrice(e.target.value)}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">R$</InputAdornment>\r\n                    ),\r\n                  }}></TextField>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Descrição\"\r\n                  value={productDescription}\r\n                  fullWidth\r\n                  multiline\r\n                  rows={5}\r\n                  onChange={(e) =>\r\n                    setProductDescription(e.target.value)\r\n                  }></TextField>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disableElevation>\r\n                  Salvar\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  type=\"reset\"\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  disableElevation>\r\n                  Limpar\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n\r\n        // <Grid container id=\"item-form\" className={classes.formContainer}>\r\n        //   <Grid item xs={12}>\r\n        //     <Box className={classes.formContainer}>\r\n        //       <h2>Criar produto</h2>\r\n        //       <form onSubmit={createProduct}>\r\n        //         <Grid container xs={12} spacing={3}>\r\n        //           <Grid item xs={6}>\r\n        //             <input\r\n        //               name=\"supplierName\"\r\n        //               required\r\n        //               id=\"productName\"\r\n        //               onChange={(e) => setProductName(e.target.value)}\r\n        //               autoFocus\r\n        //               placeholder=\"NOME\"\r\n        //               type=\"text\"></input>\r\n        //           </Grid>\r\n        //           <Grid item xs={3}>\r\n        //             <input\r\n        //               name=\"productSKU\"\r\n        //               required\r\n        //               id=\"productSKU\"\r\n        //               onChange={(e) => setProductSKU(e.target.value)}\r\n        //               autoFocus\r\n        //               placeholder=\"SKU\"\r\n        //               type=\"number\"></input>\r\n        //           </Grid>\r\n        //         </Grid>\r\n        //         <Grid container xs={12} spacing={3}>\r\n        //           <Grid item xs={3}>\r\n        //             <CurrencyInput\r\n        //               prefix=\"R$\"\r\n        //               name=\"productPrice\"\r\n        //               id=\"productPrice\"\r\n        //               onChange={(e) => setProductName(e.target.value)}\r\n        //               placeholder=\"PREÇO\"\r\n        //             />\r\n        //           </Grid>\r\n        //           <Grid item xs={6}>\r\n        //             <SelectSearch\r\n        //               search={true}\r\n        //               value={selectedProductSupplier}\r\n        //               getOptions={(query) => {\r\n        //                 return new Promise((resolve, reject) => {\r\n        //                   UserService.getSuppliers().then((response) => {\r\n        //                     console.log(\"resp get suppl\");\r\n        //                     console.log(response.data);\r\n        //                     resolve(\r\n        //                       response.data.map(({ id, name }) => ({\r\n        //                         value: id,\r\n        //                         name: name,\r\n        //                       }))\r\n        //                     );\r\n        //                   });\r\n        //                 });\r\n        //               }}\r\n        //               options={[]}\r\n        //               id=\"productSupplierId\"\r\n        //               name=\"search\"\r\n        //               onChange={(value) => {\r\n        //                 console.log(value);\r\n        //                 setSelectedProductSupplier(value);\r\n        //               }}\r\n        //               placeholder=\"FORNECEDOR\"\r\n        //             />\r\n        //           </Grid>\r\n        //         </Grid>\r\n        //         <Grid container xs={12} spacing={3}>\r\n        //           <Grid item xs={6}>\r\n        //             <input\r\n        //               name=\"productRfId\"\r\n        //               id=\"productRfId\"\r\n        //               onChange={(e) => setProductRfId(e.target.value)}\r\n        //               autoFocus\r\n        //               placeholder=\"RFID\"\r\n        //               type=\"text\"></input>\r\n        //           </Grid>\r\n        //           <Grid item xs={6}>\r\n        //             <input\r\n        //               name=\"productBatchNumber\"\r\n        //               id=\"productBatchNumber\"\r\n        //               onChange={(e) => setProductBatchNumber(e.target.value)}\r\n        //               autoFocus\r\n        //               placeholder=\"LOTE\"\r\n        //               type=\"text\"></input>\r\n        //           </Grid>\r\n        //         </Grid>\r\n        //         <Grid container xs={12} spacing={3}>\r\n        //           <Grid item xs={12}>\r\n        //             <textarea\r\n        //               name=\"productDescription\"\r\n        //               id=\"productDescription\"\r\n        //               onChange={(e) => setProductDescription(e.target.value)}\r\n        //               autoFocus\r\n        //               placeholder=\"DESCRIÇÃO\"\r\n        //               type=\"text\"></textarea>\r\n        //           </Grid>\r\n        //         </Grid>\r\n        //         <Box mt={3} style={{ float: \"right\" }}>\r\n        //           <Button\r\n        //             onClick={() => {\r\n        //               // setIsModalFormOpen(false);\r\n        //             }}\r\n        //             variant=\"outlined\"\r\n        //             color=\"primary\"\r\n        //             type=\"reset\">\r\n        //             Limpar\r\n        //           </Button>\r\n        //           <Button\r\n        //             style={{ marginLeft: \"15px\" }}\r\n        //             color=\"secondary\"\r\n        //             variant=\"contained\"\r\n        //             type=\"submit\">\r\n        //             Salvar\r\n        //           </Button>\r\n        //         </Box>\r\n        //       </form>\r\n        //     </Box>\r\n        //   </Grid>\r\n        // </Grid>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container maxWidth=\"md\" align=\"center\" style={{ paddingTop: \"5rem\" }}>\r\n          <Typography>Você não está logado</Typography>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderProductData = () => {};\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"row\">\r\n      <Navbar />\r\n      <Container\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"xl\"\r\n        align=\"center\">\r\n        {renderProductForm()}\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Navbar from \"./navbar\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nimport MaterialTable, { Column } from \"@material-table/core\";\r\nimport InputMask, { ReactInputMask } from \"react-input-mask\";\r\n//css imports\r\nrequire(\"./css/forms.css\");\r\n\r\nconst useStyles = makeStyles({\r\n  formContainer: {\r\n    paddingLeft: \"7vw\",\r\n    paddingRight: \"7vw\",\r\n    paddingTop: \"2vh\",\r\n  },\r\n});\r\n\r\nexport default function Suppliers() {\r\n  const [user, setUser] = useState(null);\r\n  const [isLogged, setIsLogged] = useState(null);\r\n\r\n  const getUserFromStorage = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user) {\r\n      setUser(user);\r\n      setIsLogged(true);\r\n    } else {\r\n      setUser(null);\r\n      setIsLogged(false);\r\n    }\r\n  };\r\n\r\n  const [supplierName, setSupplierName] = useState(null);\r\n  const [supplierEmail, setSupplierEmail] = useState(null);\r\n  const [supplierPhone, setSupplierPhone] = useState(null);\r\n  const [supplierAddress, setSupplierAddress] = useState(null);\r\n  const [supplierCNPJ, setSupplierCNPJ] = useState(null);\r\n  const [supplierCorporateName, setSupplierCorporateName] = useState(null);\r\n  const [supplierFantasyName, setSupplierFantasyName] = useState(null);\r\n  const [supplierCEP, setSupplierCEP] = useState(null);\r\n  const [supplierAddressNumber, setSupplierAddressNumber] = useState(null);\r\n  const [supplierItems, setSupplierItems] = useState([]);\r\n  const [supplierInfos, setSupplierInfos] = useState([]);\r\n\r\n  const [suppliersData, setSuppliersData] = useState([]);\r\n  const [suppliersColumns, setSuppliersColumns] = useState([\r\n    { field: \"name\", title: \"Nome\" },\r\n    { field: \"email\", title: \"Email\" },\r\n    { field: \"phone\", title: \"Telefone\" },\r\n    { field: \"address\", title: \"Endereço\" },\r\n    { field: \"cnpj\", title: \"CNPJ\" },\r\n    { field: \"corporateName\", title: \"Razão Social\" },\r\n    { field: \"fantasyName\", title: \"Nome Fantasia\" },\r\n    { field: \"cep\", title: \"CEP\" },\r\n    { field: \"addressNumber\", title: \"Número\" },\r\n  ]);\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await getSuppliers();\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserFromStorage();\r\n  }, [isLogged]);\r\n\r\n  const createSupplier = (event) => {\r\n    event.preventDefault();\r\n    UserService.createSupplier({\r\n      name: supplierName,\r\n      email: supplierEmail,\r\n      phone: supplierPhone,\r\n      address: supplierAddress,\r\n      cnpj: supplierCNPJ,\r\n      corporateName: supplierCorporateName,\r\n      fantasyName: supplierFantasyName,\r\n      cep: supplierCEP,\r\n      addressNumber: supplierAddressNumber,\r\n    }).then(\r\n      (response) => {\r\n        toast.success(\"Supplier created successfully\");\r\n        getSuppliers();\r\n      },\r\n      (error) => {\r\n        toast.error(error.response.data.message);\r\n      }\r\n    );\r\n  };\r\n\r\n  const getSuppliers = () => {\r\n    UserService.getSuppliers().then(\r\n      (response) => {\r\n        let suppliers = [];\r\n        for (const supplier of response.data) {\r\n          suppliers.push({\r\n            id: supplier.id,\r\n            name: supplier.name,\r\n            email: supplier.email,\r\n            phone: supplier.phone,\r\n            address: supplier.address,\r\n            cnpj: supplier.cnpj,\r\n            corporateName: supplier.corporateName,\r\n            fantasyName: supplier.fantasyName,\r\n            cep: supplier.cep,\r\n            addressNumber: supplier.addressNumber,\r\n          });\r\n        }\r\n        setSuppliersData(suppliers);\r\n      },\r\n      (error) => {\r\n        toast.error(error.response.data.message);\r\n      }\r\n    );\r\n  };\r\n\r\n  const deleteSupplier = (id) => {\r\n    UserService.deleteSupplier({ id: id }).then(\r\n      (response) => {\r\n        toast.success(\"Fornecedor deletado com sucesso\");\r\n        getSuppliers();\r\n      },\r\n      (error) => {\r\n        toast.error(error.response.data.message);\r\n      }\r\n    );\r\n  };\r\n\r\n  const updateSupplier = (data) => {\r\n    UserService.updateSupplier(data).then(\r\n      (response) => {\r\n        toast.success(\"Fornecedor atualizado com sucesso\");\r\n        getSuppliers();\r\n      },\r\n      (error) => {\r\n        toast.error(error.response.data.message);\r\n      }\r\n    );\r\n  };\r\n\r\n  const renderSuppliersForm = () => {\r\n    if (isLogged) {\r\n      return (\r\n        <Container maxWidth=\"md\" align=\"center\" style={{ paddingTop: \"5rem\" }}>\r\n          <Typography\r\n            align=\"center\"\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n            style={{ marginBottom: \"2rem\" }}>\r\n            Cadastrar Fornecedor\r\n          </Typography>\r\n\r\n          <form onSubmit={createSupplier}>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              xs={12}\r\n              alignItems=\"center\"\r\n              style={{ marginBottom: \"2rem\" }}>\r\n              <Grid item xs={4}>\r\n                <InputMask\r\n                  mask={\"99.999.999/9999-99\"}\r\n                  value={supplierCNPJ}\r\n                  onChange={(e) => setSupplierCNPJ(e.target.value)}>\r\n                  {() => (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CNPJ\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required></TextField>\r\n                  )}\r\n                </InputMask>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Nome\"\r\n                  value={supplierName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) => setSupplierName(e.target.value)}></TextField>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Razão Social\"\r\n                  value={supplierCorporateName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setSupplierCorporateName(e.target.value)\r\n                  }></TextField>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Nome Fantasia\"\r\n                  value={supplierFantasyName}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setSupplierFantasyName(e.target.value)\r\n                  }></TextField>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Endereço\"\r\n                  value={supplierAddress}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setSupplierAddress(e.target.value)\r\n                  }></TextField>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <InputMask\r\n                  mask={\"99999-999\"}\r\n                  value={supplierCEP}\r\n                  onChange={(e) => setSupplierCEP(e.target.value)}>\r\n                  {() => (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"CEP\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required></TextField>\r\n                  )}\r\n                </InputMask>\r\n              </Grid>\r\n\r\n              <Grid item xs={3}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"Nº\"\r\n                  value={supplierAddressNumber}\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setSupplierAddressNumber(e.target.value)\r\n                  }></TextField>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  label=\"E-mail\"\r\n                  value={supplierEmail}\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  required\r\n                  onChange={(e) =>\r\n                    setSupplierEmail(e.target.value)\r\n                  }></TextField>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <InputMask\r\n                  mask={\"9999-9999\"}\r\n                  value={supplierPhone}\r\n                  onChange={(e) => setSupplierPhone(e.target.value)}>\r\n                  {() => (\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      label=\"Telefone\"\r\n                      type=\"tel\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      required></TextField>\r\n                  )}\r\n                </InputMask>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disableElevation>\r\n                  Salvar\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  type=\"reset\"\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  disableElevation>\r\n                  Limpar\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container maxWidth=\"md\" align=\"center\" style={{ paddingTop: \"5rem\" }}>\r\n          <Typography>Você não está logado</Typography>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderSuppliersData = () => {\r\n    if (isLogged) {\r\n      return (\r\n        <Container maxWidth=\"md\">\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box className={classes.formContainer}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <div\r\n                      style={{\r\n                        height: 700,\r\n                        width: \"100%\",\r\n                        marginBottom: \"5rem\",\r\n                      }}>\r\n                      <MaterialTable\r\n                        title=\"Fornecedores\"\r\n                        columns={suppliersColumns}\r\n                        data={suppliersData}\r\n                        // actions={[\r\n                        //     {\r\n                        //       icon: 'save',\r\n                        //       tooltip: 'Save User',\r\n                        //       onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\r\n                        //     }\r\n                        //   ]}\r\n                        editable={{\r\n                          onRowDelete: (selectedRow) =>\r\n                            new Promise((resolve, reject) => {\r\n                              try {\r\n                                console.log(selectedRow);\r\n                                deleteSupplier(selectedRow.id);\r\n                                resolve();\r\n                              } catch (error) {\r\n                                console.log(error);\r\n                                reject();\r\n                              }\r\n                            }),\r\n                          onRowUpdate: (updatedRow, oldRow) =>\r\n                            new Promise((resolve, reject) => {\r\n                              updateSupplier(updatedRow);\r\n                              resolve();\r\n                            }),\r\n                        }}\r\n                        options={{\r\n                          actionsColumnIndex: -1,\r\n                          addRowPosition: \"first\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"row\">\r\n      <Navbar />\r\n      <Container\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth=\"xl\"\r\n        align=\"center\">\r\n        {renderSuppliersForm()}\r\n        {renderSuppliersData()}\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\n//   {/* <Grid id=\"item-form\" className={classes.formContainer} container>\r\n//       <Grid item xs={12}>\r\n//         <Box className={classes.formContainer}>\r\n//           <h2>Criar fornecedor</h2>\r\n//           <form onSubmit={createSupplier}>\r\n//             <Grid container spacing={3}>\r\n//               <Grid item xs={6}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"NOME\"\r\n//                   onChange={(e) => setSupplierName(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={6}>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   placeholder=\"E-MAIL\"\r\n//                   onChange={(e) => setSupplierEmail(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Grid container spacing={3}>\r\n//               <Grid item xs={5}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"TELEFONE\"\r\n//                   onChange={(e) => setSupplierPhone(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={7}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"ENDEREÇO\"\r\n//                   onChange={(e) => setSupplierAddress(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Grid container spacing={3}>\r\n//               <Grid item xs={6}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"CNPJ\"\r\n//                   onChange={(e) => setSupplierCNPJ(e.target.value)}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={6}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"NOME FANTASIA\"\r\n//                   onChange={(e) => setSupplierFantasyName(e.target.value)}\r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Grid container spacing={3}>\r\n//               <Grid item xs={6}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"RAZÃO SOCIAL\"\r\n//                   onChange={(e) => setSupplierCorporateName(e.target.value)}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={3}>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"CEP\"\r\n//                   onChange={(e) => setSupplierCEP(e.target.value)}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={3}>\r\n//                 <input\r\n//                   type=\"number\"\r\n//                   placeholder=\"NÚMERO\"\r\n//                   onChange={(e) => setSupplierAddressNumber(e.target.value)}\r\n//                 />\r\n//               </Grid>\r\n//             </Grid>\r\n//             <Grid container spacing={3}>\r\n//               <Grid item xs={12}>\r\n//                 <Box mt={3} style={{ float: \"right\" }}>\r\n//                   <Button\r\n//                     onClick={() => {\r\n//                       // setIsModalFormOpen(false);\r\n//                     }}\r\n//                     variant=\"outlined\"\r\n//                     color=\"primary\"\r\n//                     type=\"reset\">\r\n//                     Limpar\r\n//                   </Button>\r\n//                   <Button\r\n//                     style={{ marginLeft: \"15px\" }}\r\n//                     color=\"secondary\"\r\n//                     variant=\"contained\"\r\n//                     type=\"submit\">\r\n//                     Salvar\r\n//                   </Button>\r\n//                 </Box>\r\n//               </Grid>\r\n//             </Grid>\r\n//           </form>\r\n//         </Box>\r\n//       </Grid>\r\n//     </Grid> */}\r\n","import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nimport SignIn from \"./pages/signIn\";\r\nimport SignUp from \"./pages/signUp\";\r\nimport Home from \"./pages/home\";\r\nimport Products from \"./pages/products\";\r\nimport Suppliers from \"./pages/suppliers\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Paper style={{ height: \"100vh\" }}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/signIn\">\r\n            <SignIn />\r\n          </Route>\r\n          <Route exact path=\"/signUp\">\r\n            <SignUp />\r\n          </Route>\r\n          <Route exact path=\"/products\">\r\n            <Products />\r\n          </Route>\r\n          <Route exact path=\"/suppliers\">\r\n            <Suppliers />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}